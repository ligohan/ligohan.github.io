[{"title":"【FastDFS】1.FastDFS 安装和部署","date":"2018-05-10T12:35:05.261Z","path":"2018/05/10/【FastDFS】2.FastDFS与SpringBoot集成/","text":"是什么 FastDFS 详细介绍：https://www.oschina.net/p/fastdfs 开发环境 FastDFS 5.12 CentOS 6.7 环境准备编译环境1yum install git gcc gcc-c++ make automake autoconf libtool pcre pcre-devel zlib zlib-devel openssl-devel -y 创建目录 说明 位置 所有安装包存放目录 /fastdfs tracker 跟踪服务器数据 /fastdfs/tracker storage 存储服务器数据 /fastdfs/storage 1234567mkdir -p /fastdfsmkdir -p /fastdfs/trackermkdir -p /fastdfs/storage# 切换到安装目录准备下载安装包# 路径可自定义，注意下方命令需要对应修改cd /usr/workspace/fastdfs 安装 libfatscommon123git clone https://github.com/happyfish100/libfastcommon.git --depth 1cd libfastcommon/./make.sh &amp;&amp; ./make.sh install 安装 FastDFS123456789git clone https://github.com/happyfish100/fastdfs.git --depth 1cd fastdfs/./make.sh &amp;&amp; ./make.sh install#配置文件准备cp /etc/fdfs/tracker.conf.sample /etc/fdfs/tracker.confcp /etc/fdfs/storage.conf.sample /etc/fdfs/storage.confcp /etc/fdfs/client.conf.sample /etc/fdfs/client.conf #客户端文件，测试用cp /usr/workspace/fastdfs/fastdfs/conf/http.conf /etc/fdfs/ #供 nginx 访问使用cp /usr/workspace/fastdfs/fastdfs/conf/mime.types /etc/fdfs/ #供 nginx 访问使用 安装 fastdfs-nginx-module12git clone https://github.com/happyfish100/fastdfs-nginx-module.git --depth 1cp /usr/workspace/fastdfs/fastdfs-nginx-module/src/mod_fastdfs.conf /etc/fdfs 安装 nginx123456wget http://nginx.org/download/nginx-1.12.2.tar.gztar -zxvf nginx-1.12.2.tar.gzcd nginx-1.12.2/#添加 fastdfs-nginx-module 模块./configure --add-module=/usr/workspace/fastdfs/fastdfs-nginx-module/src/make &amp;&amp; make install 单机部署配置 tracker 创建目录，用于存放 store data 和 log 1mkdir -p /usr/workspace/fastdfs/tracker/data-and-log 编辑 tracker 配置文件 1234567vim /etc/fdfs/tracker.conf# 需要修改的内容如下## tracker 服务器端口（默认 22122, 一般不修改）port=22122## 存储日志和数据的根目录base_path=/usr/workspace/fastdfs/tracker/data-and-log 保存后启动 1234/etc/init.d/fdfs_trackerd start # 启动 tracker 服务chkconfig fdfs_trackerd on # 自启动 tracker 服务/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart # 重启 tracker 服务 查看是否有 tracker 进程 1ps aux | grep tracker 配置 storage（存储节点） 一般 storage 服务我们会单独装一台机子，但是这里为了方便我们安装在同一台。 如果 storage 单独安装的话，那上面安装的步骤都要在走一遍，只是到了编辑配置文件的时候，编辑的是 storage.conf 而已配置流程 创建目录，用于存放 store data 和 log 1mkdir -p /usr/workspace/fastdfs/storage/data-and-log 创建图片实际存放路径，可以设置多个 12mkdir -p /usr/workspace/fastdfs/storage/images-data0mkdir -p /usr/workspace/fastdfs/storage/images-data1 编辑 storage 配置文件 1234567891011121314vim /etc/fdfs/storage.conf# 需要修改的内容如下port=23000 # storage 服务端口（默认 23000, 一般不修改）base_path=/usr/workspace/fastdfs/storage/data-and-log # 数据和日志文件存储根目录## 第一个存储目录store_path0=/usr/workspace/fastdfs/storage/images-data0## 如果有多个，可以配置多行## store_path1=/usr/workspace/fastdfs/storage/images-data1## store_path2=/usr/workspace/fastdfs/storage/images-data2## tracker 服务器的 IP 和端口tracker_server=192.168.75.128:22122## http 访问文件的端口（默认 8888, 看情况修改, 和 nginx 中保持一致）http.server_port=8888 保存后启动 1234567# 启动 storage 服务，首次启动会很慢，因为它在创建预设存储文件的目录/etc/init.d/fdfs_storaged start# 自启动 storage 服务chkconfig fdfs_storaged on# 重启 storage 服务/usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart 查看是否有 storage 进程 1ps aux | grep storage client 测试 创建存放 store log 目录 1mkdir -p /usr/workspace/fastdfs/fastdfs/client/data-and-log 修改 client 配置文件 1234567vim /etc/fdfs/client.conf# 需要修改的内容如下## 存储日志和数据的根目录base_path=/usr/workspace/fastdfs/fastdfs/client/data-and-log## tracker 服务器的 IP 和端口tracker_server=192.168.75.128:22122 保存后测试 12345678# 先使用 shell 上传一张测试图片 test.jpg# 运行测试fdfs_upload_file /etc/fdfs/client.conf /usr/workspace/fastdfs/test/1.jpg# 返回以下 ID 即为成功group1/M00/00/00/wKhLgFryZoOATuwbAANbszC8Hfo381.jpg# 安装完 Nginx 后即可通过访问以下地址下载http://192.168.75.128/group1/M00/00/00/wKhLgFryZoOATuwbAANbszC8Hfo381.jpg 配置 Nginx 创建保存 log 目录 1mkdir -p /usr/workspace/fastdfs/fastdfs-nginx-module/data-and-log 编辑 Nginx 模块配置文件 123456789101112131415vim /etc/fdfs/mod_fastdfs.conf# 需要修改的内容如下## tracker 服务器的 IP 和端口tracker_server=192.168.75.128:22122## log 存放目录base_path=/usr/workspace/fastdfs/fastdfs-nginx-module/data-and-log## 因为我们访问图片的地址是：http://192.168.1.114/group1/M00/00/00/wKgBclb0aqWAbVNrAAAjn7_h9gM813_big.jpg## 该地址前面是带有 /group1/M00，所以我们这里要使用 true，不然访问不到（原值是 false）url_have_group_name=true## 第一个存储目录store_path0=/usr/workspace/fastdfs/storage/images-data0## 如果有多个，可以配置多行## store_path1=/usr/workspace/fastdfs/storage/images-data1## store_path2=/usr/workspace/fastdfs/storage/images-data2 编辑 Nginx 配置文件 12345678910111213141516171819202122232425vi /usr/local/nginx/conf/nginx.conf# 改为以下内容## 注意这一行，我特别加上了使用 root 用户去执行，不然有些日记目录没有权限访问user root;worker_processes 1;events &#123;worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; server &#123; listen 80; ## 访问本机 server_name 192.168.75.128; ## 拦截包含 /group1/M00 请求，使用 fastdfs 这个 Nginx 模块进行转发 location /group1/M00 &#123;ngx_fastdfs_module;&#125; &#125;&#125; 启动 Nginx 停掉防火墙：iptables stop```1- 启动：```/usr/local/nginx/sbin/nginx 访问：to nginx!```，即可表示安装成功12- 检查 时候有 Nginx 进程：```ps aux | grep nginx```，正常是显示 3 个结果出来- 刷新 Nginx 配置后重启：```/usr/local/nginx/sbin/nginx -s reload 停止 Nginx：-s stop```1- 如果访问不了，或是出现其他信息看下错误立即：```vim /var/log/nginx/error.log 测试下载 用外部浏览器访问刚才已传过的 nginx 安装包, 引用返回的 IDhttp://192.168.75.128/group1/M00/00/00/wKhLgFryZoOATuwbAANbszC8Hfo381.jpg 弹出下载单机部署全部跑通，否则首先检查防火墙，再检查其他配置。 集群部署https://www.cnblogs.com/cnmenglang/p/6731209.html 参考资料 github - judasn/Linux-Tutorial/FastDFS-Install-And-Settings 官方 GitHub Wiki FastDFS 之集群部署","tags":[{"name":"FastDFS","slug":"FastDFS","permalink":"http://blog.shaib.cn/tags/FastDFS/"}]},{"title":"【FastDFS】1.FastDFS 安装和部署","date":"2018-05-10T06:07:36.285Z","path":"2018/05/10/【FastDFS】1.FastDFS安装和部署/","text":"是什么 FastDFS 详细介绍：https://www.oschina.net/p/fastdfs 开发环境 FastDFS 5.12 CentOS 6.7 环境准备编译环境1yum install git gcc gcc-c++ make automake autoconf libtool pcre pcre-devel zlib zlib-devel openssl-devel -y 创建目录 说明 位置 所有安装包存放目录 /fastdfs tracker 跟踪服务器数据 /fastdfs/tracker storage 存储服务器数据 /fastdfs/storage 1234567mkdir -p /fastdfsmkdir -p /fastdfs/trackermkdir -p /fastdfs/storage# 切换到安装目录准备下载安装包# 路径可自定义，注意下方命令需要对应修改cd /usr/workspace/fastdfs 安装 libfatscommon123git clone https://github.com/happyfish100/libfastcommon.git --depth 1cd libfastcommon/./make.sh &amp;&amp; ./make.sh install 安装 FastDFS123456789git clone https://github.com/happyfish100/fastdfs.git --depth 1cd fastdfs/./make.sh &amp;&amp; ./make.sh install#配置文件准备cp /etc/fdfs/tracker.conf.sample /etc/fdfs/tracker.confcp /etc/fdfs/storage.conf.sample /etc/fdfs/storage.confcp /etc/fdfs/client.conf.sample /etc/fdfs/client.conf #客户端文件，测试用cp /usr/workspace/fastdfs/fastdfs/conf/http.conf /etc/fdfs/ #供 nginx 访问使用cp /usr/workspace/fastdfs/fastdfs/conf/mime.types /etc/fdfs/ #供 nginx 访问使用 安装 fastdfs-nginx-module12git clone https://github.com/happyfish100/fastdfs-nginx-module.git --depth 1cp /usr/workspace/fastdfs/fastdfs-nginx-module/src/mod_fastdfs.conf /etc/fdfs 安装 nginx123456wget http://nginx.org/download/nginx-1.12.2.tar.gztar -zxvf nginx-1.12.2.tar.gzcd nginx-1.12.2/#添加 fastdfs-nginx-module 模块./configure --add-module=/usr/workspace/fastdfs/fastdfs-nginx-module/src/make &amp;&amp; make install 单机部署配置 tracker 创建目录，用于存放 store data 和 log 1mkdir -p /usr/workspace/fastdfs/tracker/data-and-log 编辑 tracker 配置文件 1234567vim /etc/fdfs/tracker.conf# 需要修改的内容如下## tracker 服务器端口（默认 22122, 一般不修改）port=22122## 存储日志和数据的根目录base_path=/usr/workspace/fastdfs/tracker/data-and-log 保存后启动 1234/etc/init.d/fdfs_trackerd start # 启动 tracker 服务chkconfig fdfs_trackerd on # 自启动 tracker 服务/usr/bin/fdfs_trackerd /etc/fdfs/tracker.conf restart # 重启 tracker 服务 查看是否有 tracker 进程 1ps aux | grep tracker 配置 storage（存储节点） 一般 storage 服务我们会单独装一台机子，但是这里为了方便我们安装在同一台。 如果 storage 单独安装的话，那上面安装的步骤都要在走一遍，只是到了编辑配置文件的时候，编辑的是 storage.conf 而已配置流程 创建目录，用于存放 store data 和 log 1mkdir -p /usr/workspace/fastdfs/storage/data-and-log 创建图片实际存放路径，可以设置多个 12mkdir -p /usr/workspace/fastdfs/storage/images-data0mkdir -p /usr/workspace/fastdfs/storage/images-data1 编辑 storage 配置文件 1234567891011121314vim /etc/fdfs/storage.conf# 需要修改的内容如下port=23000 # storage 服务端口（默认 23000, 一般不修改）base_path=/usr/workspace/fastdfs/storage/data-and-log # 数据和日志文件存储根目录## 第一个存储目录store_path0=/usr/workspace/fastdfs/storage/images-data0## 如果有多个，可以配置多行## store_path1=/usr/workspace/fastdfs/storage/images-data1## store_path2=/usr/workspace/fastdfs/storage/images-data2## tracker 服务器的 IP 和端口tracker_server=192.168.75.128:22122## http 访问文件的端口（默认 8888, 看情况修改, 和 nginx 中保持一致）http.server_port=8888 保存后启动 1234567# 启动 storage 服务，首次启动会很慢，因为它在创建预设存储文件的目录/etc/init.d/fdfs_storaged start# 自启动 storage 服务chkconfig fdfs_storaged on# 重启 storage 服务/usr/bin/fdfs_storaged /etc/fdfs/storage.conf restart 查看是否有 storage 进程 1ps aux | grep storage client 测试 创建存放 store log 目录 1mkdir -p /usr/workspace/fastdfs/fastdfs/client/data-and-log 修改 client 配置文件 1234567vim /etc/fdfs/client.conf# 需要修改的内容如下## 存储日志和数据的根目录base_path=/usr/workspace/fastdfs/fastdfs/client/data-and-log## tracker 服务器的 IP 和端口tracker_server=192.168.75.128:22122 保存后测试 12345678# 先使用 shell 上传一张测试图片 test.jpg# 运行测试fdfs_upload_file /etc/fdfs/client.conf /usr/workspace/fastdfs/test/1.jpg# 返回以下 ID 即为成功group1/M00/00/00/wKhLgFryZoOATuwbAANbszC8Hfo381.jpg# 安装完 Nginx 后即可通过访问以下地址下载http://192.168.75.128/group1/M00/00/00/wKhLgFryZoOATuwbAANbszC8Hfo381.jpg 配置 Nginx 创建保存 log 目录 1mkdir -p /usr/workspace/fastdfs/fastdfs-nginx-module/data-and-log 编辑 Nginx 模块配置文件 123456789101112131415vim /etc/fdfs/mod_fastdfs.conf# 需要修改的内容如下## tracker 服务器的 IP 和端口tracker_server=192.168.75.128:22122## log 存放目录base_path=/usr/workspace/fastdfs/fastdfs-nginx-module/data-and-log## 因为我们访问图片的地址是：http://192.168.1.114/group1/M00/00/00/wKgBclb0aqWAbVNrAAAjn7_h9gM813_big.jpg## 该地址前面是带有 /group1/M00，所以我们这里要使用 true，不然访问不到（原值是 false）url_have_group_name=true## 第一个存储目录store_path0=/usr/workspace/fastdfs/storage/images-data0## 如果有多个，可以配置多行## store_path1=/usr/workspace/fastdfs/storage/images-data1## store_path2=/usr/workspace/fastdfs/storage/images-data2 编辑 Nginx 配置文件 12345678910111213141516171819202122232425vi /usr/local/nginx/conf/nginx.conf# 改为以下内容## 注意这一行，我特别加上了使用 root 用户去执行，不然有些日记目录没有权限访问user root;worker_processes 1;events &#123;worker_connections 1024;&#125;http &#123; include mime.types; default_type application/octet-stream; sendfile on; keepalive_timeout 65; server &#123; listen 80; ## 访问本机 server_name 192.168.75.128; ## 拦截包含 /group1/M00 请求，使用 fastdfs 这个 Nginx 模块进行转发 location /group1/M00 &#123;ngx_fastdfs_module;&#125; &#125;&#125; 启动 Nginx 停掉防火墙：iptables stop```1- 启动：```/usr/local/nginx/sbin/nginx 访问：to nginx!```，即可表示安装成功12- 检查 时候有 Nginx 进程：```ps aux | grep nginx```，正常是显示 3 个结果出来- 刷新 Nginx 配置后重启：```/usr/local/nginx/sbin/nginx -s reload 停止 Nginx：-s stop```1- 如果访问不了，或是出现其他信息看下错误立即：```vim /var/log/nginx/error.log 测试下载 用外部浏览器访问刚才已传过的 nginx 安装包, 引用返回的 IDhttp://192.168.75.128/group1/M00/00/00/wKhLgFryZoOATuwbAANbszC8Hfo381.jpg 弹出下载单机部署全部跑通，否则首先检查防火墙，再检查其他配置。 集群部署https://www.cnblogs.com/cnmenglang/p/6731209.html 参考资料 github - judasn/Linux-Tutorial/FastDFS-Install-And-Settings 官方 GitHub Wiki FastDFS 之集群部署","tags":[{"name":"FastDFS","slug":"FastDFS","permalink":"http://blog.shaib.cn/tags/FastDFS/"}]}]